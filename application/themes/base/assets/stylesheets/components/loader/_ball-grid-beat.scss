/*** ball grid beat ***/
/* HTML: <div class="loader-ball-grid-beat"><div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div> */

@include css3-keyframes(loader-ball-grid-beat) {
	50% {
		@include css3-opacity(0.5);
	}
	100% {
		@include css3-opacity(1);
	}
}

.loader-ball-grid-beat {
	text-align: center;

	> div {
		display: inline-block;
		vertical-align: middle;
		width: ($project-loader-item-size * 3) + ( $project-loader-item-distance * 6 );

		> div {
			@include css3-border-radius(100%);
			@include css3-prefix(animation-delay, 0);
			@include css3-prefix(animation-fill-mode, both);
			@include css3-prefix(animation-iteration-count, infinite);
			@include css3-prefix(animation-name, loader-ball-grid-beat);
			float: left;
			height: $project-loader-item-size;
			margin: $project-loader-item-distance;
			width: $project-loader-item-size;

			&:nth-child(1) {
				@include css3-prefix(animation-delay, -( $project-loader-item-speed * 0.07 ) );
				@include css3-prefix(animation-duration, ( $project-loader-item-speed * 1.53 ) );
				background-color: $project-loader-item-1-color;
			}

			&:nth-child(2) {
				@include css3-prefix(animation-delay, ( $project-loader-item-speed * 0.72 ) );
				@include css3-prefix(animation-duration, ( $project-loader-item-speed * 0.94 ) );
				background-color: $project-loader-item-2-color;
			}

			&:nth-child(3) {
				@include css3-prefix(animation-delay, ( $project-loader-item-speed * 0.11 ) );
				@include css3-prefix(animation-duration, ( $project-loader-item-speed * 1.25 ) );
				background-color: $project-loader-item-3-color;
			}

			&:nth-child(4) {
				@include css3-prefix(animation-delay, ( $project-loader-item-speed * 0.13 ) );
				@include css3-prefix(animation-duration, ( $project-loader-item-speed * 1.01 ) );
				background-color: $project-loader-item-1-color;
			}

			&:nth-child(5) {
				@include css3-prefix(animation-delay, ( $project-loader-item-speed * 0.1 ) );
				@include css3-prefix(animation-duration, ( $project-loader-item-speed * 1.2 ) );
				background-color: $project-loader-item-2-color;
			}

			&:nth-child(6) {
				@include css3-prefix(animation-delay, ( $project-loader-item-speed * 0.18 ) );
				@include css3-prefix(animation-duration, ( $project-loader-item-speed * 0.97 ) );
				background-color: $project-loader-item-3-color;
			}

			&:nth-child(7) {
				@include css3-prefix(animation-delay, -( $project-loader-item-speed * 0.09 ) );
				@include css3-prefix(animation-duration, ( $project-loader-item-speed * 0.67 ) );
				background-color: $project-loader-item-1-color;
			}

			&:nth-child(8) {
				@include css3-prefix(animation-delay, ( $project-loader-item-speed * 0.42 ) );
				@include css3-prefix(animation-duration, ( $project-loader-item-speed * 0.92 ) );
				background-color: $project-loader-item-2-color;
			}

			&:nth-child(9) {
				@include css3-prefix(animation-delay, ( $project-loader-item-speed * 0.52 ) );
				@include css3-prefix(animation-duration, ( $project-loader-item-speed * 1.43 ) );
				background-color: $project-loader-item-3-color;
			}
		}
	}
}
