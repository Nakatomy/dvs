/*** Project mixins css3 ***/
/* https://github.com/matthieua/sass-css3-mixins */

/* -------------------------------------------------------------
Sass CSS3 Mixins! The Cross-Browser CSS3 Sass Library
By: Matthieu Aussaguel, http://www.mynameismatthieu.com, @matthieu_tweets
List of CSS3 Sass Mixins File to be @imported and @included as you need
The purpose of this library is to facilitate the use of CSS3 on different browsers avoiding HARD TO READ and NEVER
ENDING css files
note: All CSS3 Properties are being supported by Safari 5
more info: http://www.findmebyip.com/litmus/#css3-properties
Mixins available:
- css3-prefix - arguments: Property, Value
- background-radial - arguments: Start Color: #FFFFFF, Start position: 0%, End Color: #000000, End position: 100%
- background-size - arguments: Width: 100%, Height: 100%
- background-opacity - arguments: Color: #000, Opacity: .85
- border-radius - arguments: Radius: 5px
- border-radius-separate - arguments: Top Left: 5px, Top Left: 5px, Bottom Left: 5px, Bottom Right: 5px
- box-shadow - arguments: X: 2px, Y: 2px, Blur: 5px, Color: rgba(0,0,0,.4)
- columns - arguments: Count: 3, Gap: 10
- double-borders - arguments: Color One: #3C3C3C, Color Two: #999999, Radius: 0
- font-face - arguments: Font Family: myFont, File Name: myFont
- opacity - arguments: Opacity: 0.5
- placeholder - arguments: Color: #666666
- rotate - arguments: Degree: 0, M11: 0, M12: 0, M21: 0, M22: 0
CSS Matrix Rotation Calculator http://www.boogdesign.com/examples/transforms/matrix-calculator.html
- text-shadow - arguments: X: 2px, Y: 2px, Blur: 5px, Color: rgba(0,0,0,.4)
- transform - arguments: Parameters: null
- transition - arguments: What: all, Length: 1s, Easing: ease-in-out
- triple-borders - arguments: Color One: #3C3C3C, Color Two: #999999, Color Three: #000000, Radius: 0
- keyframes - arguments: Animation name
- animation - arguments: name duration timing-function delay iteration-count direction fill-mode play-state
(http://www.w3schools.com/cssref/css3_pr_animation.asp)
------------------------------------------------------------- */
// ADDS A BROWSER PREFIX TO THE PROPERTY
@mixin css3-prefix($property, $value) {
	-webkit-#{$property}: #{$value};
	-khtml-#{$property}: #{$value};
	-moz-#{$property}: #{$value};
	-ms-#{$property}: #{$value};
	-o-#{$property}: #{$value};
	#{$property}: #{$value};
}
// BACKGROUND GRADIENT

// BACKGROUND RADIAL
@mixin css3-background-radial($startColor: #FFFFFF, $startOpacity: 1, $startPos: 0%, $endColor: #000000, $endOpacity: 1, $endPos:100%) {
	background-color: rgba( $startColor, $startOpacity );
	background-image: -moz-radial-gradient(center, ellipse cover, rgba( $startColor, $startOpacity ) $startPos, rgba( $endColor, $endOpacity ) $endPos);
	background-image: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop($startPos, rgba( $startColor, $startOpacity )), color-stop($endPos, rgba( $endColor, $endOpacity )));
	background-image: -webkit-radial-gradient(center, ellipse cover, rgba( $startColor, $startOpacity ) $startPos, rgba( $endColor, $endOpacity ) $endPos);
	background-image: -o-radial-gradient(center, ellipse cover, rgba( $startColor, $startOpacity ) $startPos, rgba( $endColor, $endOpacity ) $endPos);
	background-image: -ms-radial-gradient(center, ellipse cover, rgba( $startColor, $startOpacity ) $startPos, rgba( $endColor, $endOpacity ) $endPos);
	background-image: radial-gradient(ellipse at center, rgba( $startColor, $startOpacity ) $startPos, rgba( $endColor, $endOpacity ) $endPos);
	filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$startColor}', endColorstr='#{$endColor}', GradientType=1);
}

// BACKGROUND SIZE
@mixin css3-background-size($width: 100%, $height: $width) {
	@if type-of($width) == 'number' and $height != null {
		@include css3-prefix('background-size', $width $height);
	} @else {
		@include css3-prefix('background-size', $width);
	}
}

// BACKGROUND COLOR OPACITY
@mixin css3-background-opacity($color: #000, $opacity: 0.85) {
	background: $color;
	background: rgba($color, $opacity);
}

// BORDER RADIUS
@mixin css3-border-radius($radius: 5px) {
	-webkit-border-top-left-radius: $radius;
	-webkit-border-top-right-radius: $radius;
	-webkit-border-bottom-right-radius: $radius;
	-webkit-border-bottom-left-radius: $radius;
	-moz-border-radius-topleft: $radius;
	-moz-border-radius-topright: $radius;
	-moz-border-radius-bottomright: $radius;
	-moz-border-radius-bottomleft: $radius;
	border-top-left-radius: $radius;
	border-top-right-radius: $radius;
	border-bottom-right-radius: $radius;
	border-bottom-left-radius: $radius;
}

@mixin css3-border-radius-separate($topLeftRadius: 5px, $topRightRadius: 5px, $bottomRightRadius: 5px, $bottomLeftRadius: 5px) {
	-webkit-border-top-left-radius: $topLeftRadius;
	-webkit-border-top-right-radius: $topRightRadius;
	-webkit-border-bottom-right-radius: $bottomRightRadius;
	-webkit-border-bottom-left-radius: $bottomLeftRadius;
	-moz-border-radius-topleft: $topLeftRadius;
	-moz-border-radius-topright: $topRightRadius;
	-moz-border-radius-bottomright: $bottomRightRadius;
	-moz-border-radius-bottomleft: $bottomLeftRadius;
	border-top-left-radius: $topLeftRadius;
	border-top-right-radius: $topRightRadius;
	border-bottom-right-radius: $bottomRightRadius;
	border-bottom-left-radius: $bottomLeftRadius;
}

// BOX SHADOW
@mixin css3-box-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0,0,0,.4), $inset: "") {
	@if ($inset != "") {
		@include css3-prefix('box-shadow', $inset $x $y $blur $color);
	} @else {
		@include css3-prefix('box-shadow', $x $y $blur $color);
	}
}

// COLUMNS
@mixin css3-columns($count: 3, $gap: 10) {
	@include css3-prefix('column-count', $count);
	@include css3-prefix('column-gap', $gap);
}

// DOUBLE BORDERS
@mixin css3-double-borders($colorOne: #3C3C3C, $colorTwo: #999999, $radius: 0) {
	border: 1px solid $colorOne;
	@include css3-prefix('box-shadow', 0 0 0 1px $colorTwo);
	@include css3-border-radius( $radius );
}

// FONT FACE
@mixin css3-font-face($new-font-name, $new-font-filename) {
	@font-face {
		font-family: '#{$new-font-name}';
		src: url('#{$themePath}/fonts/#{$new-font-filename}.eot');
		src: url('#{$themePath}/fonts/#{$new-font-filename}.eot?#iefix') format('embedded-opentype'),
			 url('#{$themePath}/fonts/#{$new-font-filename}.woff') format('woff'),
			 url('#{$themePath}/fonts/#{$new-font-filename}.ttf') format('truetype'),
			 url('#{$themePath}/fonts/#{$new-font-filename}.svg##{$new-font-name}') format('svg');
		font-weight: normal;
		font-style: normal;
	}
}

// OPACITY
@mixin css3-opacity($opacity: 0.5) {
	filter: alpha(opacity=($opacity * 100));
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=" + ($opacity * 100) + ")";
	@include css3-prefix('opacity', $opacity);
}

// PLACEHOLDER
@mixin css3-placeholder($color: #666666) {
	&::-moz-placeholder { color: $color; opacity: 1; }
	&:-ms-input-placeholder { color: $color; }
	&::-webkit-input-placeholder { color: $color; }
}

// ROTATE
@mixin css3-rotate($deg: 0, $m11: 0, $m12: 0, $m21: 0, $m22: 0) {
	@include css3-prefix('transform', rotate($deg + deg));
	filter: progid:DXImageTransform.Microsoft.Matrix(
	M11=#{$m11}, M12=#{$m12}, M21=#{$m21}, M22=#{$m22}, sizingMethod='auto expand');
	zoom: 1;
}

// TEXT SHADOW
@mixin css3-text-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0,0,0,.4)) {
	text-shadow: $x $y $blur $color;
}

// TRANSFORM
@mixin css3-transform($params) {
	@include css3-prefix('transform', $params);
}

// TRANSITION
@mixin css3-transition($what: all, $length: 1s, $easing: ease-in-out) {
	@include css3-prefix('transition', $what $length $easing);
}

// TRIPLE BORDERS
@mixin css3-triple-borders($colorOne: #3C3C3C, $colorTwo: #999999, $colorThree: #000000, $radius: 0) {
	border: 1px solid $colorOne;
	@include css3-border-radius($radius);
	box-shadow: 0 0 0 1px $colorTwo, 0 0 0 2px $colorThree;
}

// KEYFRAMES
@mixin css3-keyframes($animation-name) {
	@-webkit-keyframes #{$animation-name} {
		@content;
	}
	@-moz-keyframes #{$animation-name} {
		@content;
	}
	@-ms-keyframes #{$animation-name} {
		@content;
	}
	@-o-keyframes #{$animation-name} {
		@content;
	}
	@keyframes #{$animation-name} {
		@content;
	}
}

// ANIMATION
@mixin css3-animation($str) {
	@include css3-prefix('animation', $str);
}
