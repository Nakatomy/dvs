

@function number-to-vw($num){
    @return ($num * 100vw);
}

@mixin make-vw-col($size, $columns: $grid-columns) {
    flex: 0 0 number-to-vw($size / $columns);
    // Add a `max-width` to ensure content within each column does not blow out
    // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari
    // do not appear to require this.
    max-width: number-to-vw($size / $columns);
}

@mixin make-vw-col-offset($size, $columns: $grid-columns) {
    $num: $size / $columns;
    margin-left: if($num == 0, 0, number-to-vw($num));
}

@mixin make-vw-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {
    // Common properties for all breakpoints
    %grid-column {
        position: relative;
        width: 100%;
        min-height: 1px; // Prevent columns from collapsing when empty
        padding-right: ($gutter / 2);
        padding-left: ($gutter / 2);
    }

    @each $breakpoint in map-keys($breakpoints) {
        $infix: breakpoint-infix($breakpoint, $breakpoints);

        // Allow columns to stretch full width below their breakpoints
        @for $i from 1 through $columns {
            .col#{$infix}-#{$i}-vw {
                @extend %grid-column;
            }
        }
        .col#{$infix}-vw,
        .col#{$infix}-auto-vw {
            @extend %grid-column;
        }

        @include media-breakpoint-up($breakpoint, $breakpoints) {
            // Provide basic `.col-{bp}` classes for equal-width flexbox columns
            .col#{$infix}-vw {
                flex-basis: 0;
                flex-grow: 1;
                max-width: 100%;
            }
            .col#{$infix}-auto-vw {
                flex: 0 0 auto;
                width: auto;
                max-width: none; // Reset earlier grid tiers
            }

            @for $i from 1 through $columns {
                .col#{$infix}-#{$i}-vw {
                    @include make-vw-col($i, $columns);
                }
            }

            .order#{$infix}-first-vw { order: -1; }

            .order#{$infix}-last-vw { order: $columns + 1; }

            @for $i from 0 through $columns {
                .order#{$infix}-#{$i}-vw { order: $i; }
            }

            // `$columns - 1` because offsetting by the width of an entire row isn't possible
            @for $i from 0 through ($columns - 1) {
                @if not ($infix == "" and $i == 0) { // Avoid emitting useless .offset-0
                    .offset#{$infix}-#{$i}-vw {
                        @include make-vw-col-offset($i, $columns);
                    }
                }
            }
        }
    }
}

@include make-vw-columns(12, $grid-gutter-width, $grid-breakpoints);
